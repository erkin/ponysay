 _____                                        
|  __ \                                       
| |__) |___   _ __   _   _  ___   __ _  _   _ 
|  ___// _ \ | '_ \ | | | |/ __| / _` || | | |
| |   | (_) || | | || |_| |\__ \| (_| || |_| |
|_|    \___/ |_| |_| \__, ||___/ \__,_| \__, |
                      __/ |              __/ |
                     |___/              |___/ 
   _____         _                                      _                     _              _    
  |_   _|___  __| | __ _  _  _   _  _  ___  _  _  _ _  | |_  ___  _ _  _ __  (_) _ _   __ _ | |   
    | | / _ \/ _` |/ _` || || | | || |/ _ \| || || '_| |  _|/ -_)| '_|| '  \ | || ' \ / _` || | _ 
    |_| \___/\__,_|\__,_| \_, |  \_, |\___/ \_,_||_|    \__|\___||_|  |_|_|_||_||_||_|\__,_||_|( )
                          |__/   |__/                                                          |/ 
    _                                             _    _                             _     _  _ 
   | |_  ___  _ __   ___  _ _  _ _  ___ __ __ __ | |_ | |_   ___  __ __ __ ___  _ _ | | __| || |
   |  _|/ _ \| '  \ / _ \| '_|| '_|/ _ \\ V  V / |  _|| ' \ / -_) \ V  V // _ \| '_|| |/ _` ||_|
    \__|\___/|_|_|_|\___/|_|  |_|  \___/ \_/\_/   \__||_||_|\___|  \_/\_/ \___/|_|  |_|\__,_|(_)
                                                                                                


Required runtime dependencies
=============================

    bash      : required for the main script [file: ponysay]

    cowsay    : this is a wrapper for cowsay

    coreutils : the main script [file: ponysay] uses stty, cut, ls, cat, sort, readlink, head and tail

    sed       : used to remove .pony from pony named when running `ponysay -l` and `ponysay -L`

    perl      : required to run `ponysay -l` and `ponysay -L`


Optional runtime dependencies
=============================

    ponyquotes4ponysay : for support of My Little Pony quotes with associated pony
    -- Available for Arch:ers in AUR (https://aur.archlinux.org/packages.php?ID=60988)
    -- and on github at https://github.com/maandree/ponyquotes4ponysay


Package building dependencies
=============================

    gcc       : used for compiling ponysaytruncater.c

    gzip      : used for compressing manpages

    make      : required to run the make script

    coreutils : make script uses install unlink rm ln mkdir cp


Dependencies for pony providers
===============================

    make      : required to run `make -B ttyponies` 

    coreutils : ln and readlink are used in the ttyponies subscript

    bash      : used in the ttyponies subscript

    util-say  : used by `make ttyponies` to builder ttyponies from xterm ponies
    -- Available for Arch:ers in AUR as util-say-git (https://aur.archlinux.org/packages.php?ID=60241)
    -- and on github at https://github.com/maandree/util-say


Installation on GNU/Linux (or other Unix implementations)
=========================================================

    Before installing ponysay, make sure your system have the packages listed under
    [Required runtime dependencies] and [Package building dependencies] installed.
    
    Download or clone the project.  bleeding edge:  https://github.com/erkin/ponysay/tarball/master
    	     	      	  	    release:        https://github.com/erkin/ponysay/tags
    
    In the terminal, `cd` into the ponysay directory and execute `make && make install`.
    This will install ponysay into the $PREFIX (/usr by default, meaning you may need to
    run `make install` as root, e.g by running `sudo make install`.)
    
    In order to use ponysay, run:                 ponysay "I am just the cutest pony!"
    Or if you have a specific pony in your mind:  ponysay -f pinkie "Partay!~"
    
    Run `info ponysay`, `man 6 ponysay` (man ponysay) or `ponysay -h` for more information.
    A Spanish manual is available: man -L es 6 ponysay


Pony fortune on terminal startup
================================

    This requires that you have fortune utility installed. You can install it from your
    distributions package repository, it should be named fortune or fortune-mod.
    
    Edit your ~/.bashrc and this line [to the end should work]:
    
        fortune | ponysay
    
    Now every time you open a terminal a pony should give your fortune.
    
    If you wany ponified fortuned the are some stuff you can try:
        
        A gigantic sed script:
          http://www.reddit.com/r/mylittlelinux/comments/srixi/using_ponysay_with_a_ponified_fortune_warning/
        
        ponypipe:
          https://github.com/maandree/ponypipe
          https://aur.archlinux.org/packages.php?ID=60228
        
        pinkie-pie:
          https://github.com/maandree/pinkie-pie
          https://aur.archlinux.org/packages.php?ID=60229


Pony quotes
===========

Installing ponyquotes4ponysay will enable My Little Pony quotes with associated pony.
It is available at:  https://github.com/maandree/ponyquotes4ponysay
                     https://aur.archlinux.org/packages.php?ID=60988

Run `ponysay -q` will give you a random pony saying one it its quote from MLP:FiM.
Add one or more argument after `-q` to sepcify a set of ponies from which one will be selected randomly.

When running `ponysay -l` or `ponysay -L` the ponies which have quotes will be printed bold or bright (depending on terminal


Ponies in TTY (Linux VT)
========================

    If you have a custom colour palette edit your ~/.bashrc and add:
    
        if [ "$TERM" = "linux" ]; then
            function ponysay
            {
                exec ponysay "$@"
                #RESET PALETTE HERE
            }
        fi


FAQ
===

    Q: The output looks like a mess in (TTY/PuTTY/other)!
    
    A: Unfortunately, there's nothing much we can do about it.
       See issue 1:  https://github.com/erkin/ponysay/issues/1
    
    Q: You are missing (my-favourite-pony)!
    
    A: Ask and we'll add!
       https://github.com/erkin/ponysay/issues
    
    Q: Which programs do you use to generate the pony files?
    
    A: The pony files are actually mostly a bunch of selected browser
       ponies that are generated into cow files via img2xterm
         https://github.com/rossy2401/img2xterm
       or util-say.
         https://github.com/maandree/util-say
         https://aur.archlinux.org/packages.php?ID=60241


Providing ponies
================

    Most pony images are browser ponies or desktop ponies,
    browser ponies is a fork of desktop ponies, implementing it in JavaScript.
    
    Browser ponies:  https://github.com/panzi/Browser-Ponies
    Desktop ponies:  http://desktop-pony-team.deviantart.com/
    
    There is also a collection of ponies that are not yet pixelated in a Java reimplementation:
      https://github.com/maandree/unisay/tree/develop/dev/newponies
    
    
    New ponies can be created from regular images by using img2xterm
      https://github.com/rossy2401/img2xterm
    or util-say
      https://github.com/maandree/util-say
      https://aur.archlinux.org/packages.php?ID=60241
    
    Using util-say:
        
        img2ponysay -c 1 -2 -- SOURCE_IMAGE > PONY_FILE
        
        PONY_FILE should end with .pony and be localed in ponies/
        
        Omit -2 if the source image does not use double pixel size.
        
        (`-c 1` is no longer required.)
        For more information see https://github.com/maandree/util-say/wiki/img2ponysay
    
    When a pony is added please also add a ttypony version, but if you don't please
    state so in the pull request so we do not miss the create it; the simplest way to
    do this is to run `make -B ttyponies` after adding the ponies to ponies/,
    
    Running `make -B ttyponies` will build (or rebuild) all ttyponies with a pony present
    in ponies/, and creates all needed symlinks.
    
    To be able to run `make -B ttyponies` you must have the packages listed under
    [Dependencies for pony providers].

